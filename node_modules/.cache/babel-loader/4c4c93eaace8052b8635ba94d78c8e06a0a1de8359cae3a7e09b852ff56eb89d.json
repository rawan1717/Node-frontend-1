{"ast":null,"code":"import{createContext,useEffect,useState}from\"react\";import axios from\"axios\";import{jwtDecode}from\"jwt-decode\";// Import jwt-decode\nimport{jsx as _jsx}from\"react/jsx-runtime\";export let DataContext=/*#__PURE__*/createContext();export default function DataContextFunction(_ref){let{children}=_ref;const[user,setUser]=useState(null);// User data\nconst[destinations,setDestinations]=useState([]);// List of destinations\nconst[accommodationPlaces,setAccommodationPlaces]=useState([]);// Places options\nconst[accommodationTypes,setAccommodationTypes]=useState([]);// Types options\nconst[selectedAccommodation,setSelectedAccommodation]=useState(null);// Selected accommodation\nconst[transportationTypes,setTransportationTypes]=useState([]);// List of transportation types\nconst[selectedTransportation,setSelectedTransportation]=useState(null);// Selected transportation details\nconst[loading,setLoading]=useState(false);// Loading indicator\nconst token=localStorage.getItem(\"token\");// Get the token from localStorage\n// Fetch user data, destinations, accommodation places, types, and transportation types\nuseEffect(()=>{const fetchUserData=async()=>{if(token){try{const decodedToken=jwtDecode(token);const userId=decodedToken===null||decodedToken===void 0?void 0:decodedToken.id;const response=await axios.get(`https://explore-ksa-backend.vercel.app/apis/user/userdata/${userId}`);console.log(\"User data\",response.data);setUser(response.data.user);}catch(error){console.error(\"Error fetching user data\",error);setUser(null);}}else{setUser(null);}};const fetchDestinations=async()=>{try{const response=await axios.get(\"https://explore-ksa-backend.vercel.app/api/destinations\");setDestinations(response.data);}catch(error){console.error(\"Error fetching destinations\",error);setDestinations([]);}};const fetchAccommodationOptions=async()=>{try{const[placesResponse,typesResponse]=await Promise.all([axios.get(\"https://explore-ksa-backend.vercel.app/api/accommodation/accommodations/names\"),axios.get(\"https://explore-ksa-backend.vercel.app/api/accommodation/accommodations/types\")]);setAccommodationPlaces(placesResponse.data);setAccommodationTypes(typesResponse.data);}catch(error){console.error(\"Error fetching accommodation options\",error);setAccommodationPlaces([]);setAccommodationTypes([]);}};const fetchTransportationTypes=async()=>{try{const response=await axios.get(\"https://explore-ksa-backend.vercel.app/api/transportation/types\");setTransportationTypes(response.data);}catch(error){console.error(\"Error fetching transportation types\",error);setTransportationTypes([]);}};setUser(null);setDestinations([]);fetchUserData();fetchDestinations();fetchAccommodationOptions();fetchTransportationTypes();},[token]);// Fetch selected accommodation details\nconst fetchAccommodationData=async(place,type)=>{try{setLoading(true);const response=await axios.get(`https://explore-ksa-backend.vercel.app/api/accommodation/getdata?name=${place}&type=${type}`);setSelectedAccommodation(response.data[0]);}catch(error){console.error(\"Error fetching accommodation data\",error);setSelectedAccommodation(null);}finally{setLoading(false);}};// Fetch selected transportation details\nconst fetchTransportationData=async type=>{try{setLoading(true);const response=await axios.get(`https://explore-ksa-backend.vercel.app/api/transportation/type/${type}`);setSelectedTransportation(response.data[0]);}catch(error){console.error(\"Error fetching transportation data\",error);setSelectedTransportation(null);}finally{setLoading(false);}};const postReview=async reviewData=>{try{setLoading(true);const response=await axios.post(\"https://explore-ksa-backend.vercel.app/api/reviwews\",reviewData);return response.data;}catch(error){console.error(\"Error posting review\",error);return null;}finally{setLoading(false);}};return/*#__PURE__*/_jsx(DataContext.Provider,{value:{user,destinations,accommodationPlaces,accommodationTypes,selectedAccommodation,fetchAccommodationData,loading,transportationTypes,selectedTransportation,fetchTransportationData,postReview},children:children});}","map":{"version":3,"names":["createContext","useEffect","useState","axios","jwtDecode","jsx","_jsx","DataContext","DataContextFunction","_ref","children","user","setUser","destinations","setDestinations","accommodationPlaces","setAccommodationPlaces","accommodationTypes","setAccommodationTypes","selectedAccommodation","setSelectedAccommodation","transportationTypes","setTransportationTypes","selectedTransportation","setSelectedTransportation","loading","setLoading","token","localStorage","getItem","fetchUserData","decodedToken","userId","id","response","get","console","log","data","error","fetchDestinations","fetchAccommodationOptions","placesResponse","typesResponse","Promise","all","fetchTransportationTypes","fetchAccommodationData","place","type","fetchTransportationData","postReview","reviewData","post","Provider","value"],"sources":["/home/mubeen/Downloads/Node-Frontend/src/context/context.js"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { jwtDecode } from \"jwt-decode\"; // Import jwt-decode\r\n\r\nexport let DataContext = createContext();\r\n\r\nexport default function DataContextFunction({ children }) {\r\n  const [user, setUser] = useState(null); // User data\r\n  const [destinations, setDestinations] = useState([]); // List of destinations\r\n  const [accommodationPlaces, setAccommodationPlaces] = useState([]); // Places options\r\n  const [accommodationTypes, setAccommodationTypes] = useState([]); // Types options\r\n  const [selectedAccommodation, setSelectedAccommodation] = useState(null); // Selected accommodation\r\n  const [transportationTypes, setTransportationTypes] = useState([]); // List of transportation types\r\n  const [selectedTransportation, setSelectedTransportation] = useState(null); // Selected transportation details\r\n  const [loading, setLoading] = useState(false); // Loading indicator\r\n  const token = localStorage.getItem(\"token\"); // Get the token from localStorage\r\n\r\n  // Fetch user data, destinations, accommodation places, types, and transportation types\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      if (token) {\r\n        try {\r\n          const decodedToken = jwtDecode(token);\r\n          const userId = decodedToken?.id;\r\n          const response = await axios.get(`https://explore-ksa-backend.vercel.app/apis/user/userdata/${userId}`);\r\n          console.log(\"User data\", response.data);\r\n          setUser(response.data.user);\r\n        } catch (error) {\r\n          console.error(\"Error fetching user data\", error);\r\n          setUser(null);\r\n        }\r\n      } else {\r\n        setUser(null);\r\n      }\r\n    };\r\n\r\n    const fetchDestinations = async () => {\r\n      try {\r\n        const response = await axios.get(\"https://explore-ksa-backend.vercel.app/api/destinations\");\r\n        setDestinations(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching destinations\", error);\r\n        setDestinations([]);\r\n      }\r\n    };\r\n\r\n    const fetchAccommodationOptions = async () => {\r\n      try {\r\n        const [placesResponse, typesResponse] = await Promise.all([\r\n          axios.get(\"https://explore-ksa-backend.vercel.app/api/accommodation/accommodations/names\"),\r\n          axios.get(\"https://explore-ksa-backend.vercel.app/api/accommodation/accommodations/types\")\r\n        ]);\r\n        setAccommodationPlaces(placesResponse.data);\r\n        setAccommodationTypes(typesResponse.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching accommodation options\", error);\r\n        setAccommodationPlaces([]);\r\n        setAccommodationTypes([]);\r\n      }\r\n    };\r\n\r\n    const fetchTransportationTypes = async () => {\r\n      try {\r\n        const response = await axios.get(\"https://explore-ksa-backend.vercel.app/api/transportation/types\");\r\n        setTransportationTypes(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching transportation types\", error);\r\n        setTransportationTypes([]);\r\n      }\r\n    };\r\n\r\n    setUser(null);\r\n    setDestinations([]);\r\n    fetchUserData();\r\n    fetchDestinations();\r\n    fetchAccommodationOptions();\r\n    fetchTransportationTypes();\r\n  }, [token]);\r\n\r\n  // Fetch selected accommodation details\r\n  const fetchAccommodationData = async (place, type) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get(`https://explore-ksa-backend.vercel.app/api/accommodation/getdata?name=${place}&type=${type}`);\r\n      setSelectedAccommodation(response.data[0]);\r\n    } catch (error) {\r\n      console.error(\"Error fetching accommodation data\", error);\r\n      setSelectedAccommodation(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fetch selected transportation details\r\n  const fetchTransportationData = async (type) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get(`https://explore-ksa-backend.vercel.app/api/transportation/type/${type}`);\r\n      setSelectedTransportation(response.data[0]);\r\n    } catch (error) {\r\n      console.error(\"Error fetching transportation data\", error);\r\n      setSelectedTransportation(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  const postReview = async (reviewData) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.post(\"https://explore-ksa-backend.vercel.app/api/reviwews\", reviewData);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"Error posting review\", error);\r\n      return null;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DataContext.Provider\r\n      value={{\r\n        user,\r\n        destinations,\r\n        accommodationPlaces,\r\n        accommodationTypes,\r\n        selectedAccommodation,\r\n        fetchAccommodationData,\r\n        loading,\r\n        transportationTypes,\r\n        selectedTransportation,\r\n        fetchTransportationData,\r\n        postReview\r\n      }}\r\n    >\r\n      {children}\r\n    </DataContext.Provider>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}