{"ast":null,"code":"import React from'react';import{Navigate}from'react-router-dom';import Navbar from'../Navbar/Navbar.jsx';// Import the Navbar component\nimport{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const Protected=_ref=>{let{children}=_ref;const token=localStorage.getItem('token');// If the token is not found, redirect to the login page\nif(!token){return/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true});}// If the token exists, render the Navbar and children components\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{}),children]});};export default Protected;","map":{"version":3,"names":["React","Navigate","Navbar","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Protected","_ref","children","token","localStorage","getItem","to","replace"],"sources":["/home/mubeen/Downloads/Node-frontend/src/components/Protucted/Protucted.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport Navbar from '../Navbar/Navbar.jsx';  // Import the Navbar component\r\n\r\nconst Protected = ({ children }) => {\r\n  const token = localStorage.getItem('token');\r\n\r\n  // If the token is not found, redirect to the login page\r\n  if (!token) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  // If the token exists, render the Navbar and children components\r\n  return (\r\n    <>\r\n      <Navbar /> \r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Protected;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,KAAQ,kBAAkB,CAC3C,MAAO,CAAAC,MAAM,KAAM,sBAAsB,CAAG;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE5C,KAAM,CAAAC,SAAS,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC7B,KAAM,CAAAE,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAE3C;AACA,GAAI,CAACF,KAAK,CAAE,CACV,mBAAOR,IAAA,CAACH,QAAQ,EAACc,EAAE,CAAC,QAAQ,CAACC,OAAO,MAAE,CAAC,CACzC,CAEA;AACA,mBACER,KAAA,CAAAF,SAAA,EAAAK,QAAA,eACEP,IAAA,CAACF,MAAM,GAAE,CAAC,CACTS,QAAQ,EACT,CAAC,CAEP,CAAC,CAED,cAAe,CAAAF,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}